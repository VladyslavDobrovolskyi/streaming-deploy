services:
    app:
        build:
            context: ./weekly-streaming
            dockerfile: Dockerfile
        container_name: client
        ports:
            - 7777:7777
        restart: always
        networks:
            - app-network
    api:
        build:
            context: ./weekly-streaming/server-api
            dockerfile: Dockerfile
        container_name: api-server
        ports:
            - 8888:8888
        restart: always
        networks:
            - app-network
    ws:
        build:
            context: ./weekly-streaming/server-ws
            dockerfile: Dockerfile
        container_name: ws-server
        ports:
            - 9999:9999
        restart: always
        networks:
            - app-network

    nginx:
        image: nginx:latest
        container_name: nginx-proxy
        restart: always
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./stream:/usr/share/nginx/html/stream # Монтируем папку stream
            - ./certificate/www:/var/www/certbot
            - ./certificate/conf/:/etc/letsencrypt
        depends_on:
            - app
            - postgres
        networks:
            - app-network

    postgres:
        image: postgres:latest
        container_name: postgres-db
        restart: always
        environment:
            POSTGRES_USER: streamingdb
            POSTGRES_PASSWORD: dbstreaming
            POSTGRES_DB: streamingdb
        ports:
            - '5621:5432'
        volumes:
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Mounting
            - ./data:/var/lib/postgresql/data
        networks:
            - app-network

    # certbot:
    #   image: certbot/certbot:latest
    #   depends_on:
    #      - nginx
    #   volumes:
    #     - ./certificate/www:/var/www/certbot
    #     - ./certificate/conf/:/etc/letsencrypt
    #   command: certonly --webroot --webroot-path=/var/www/certbot --email vladyslav.dobrovolski@gmail.com --agree-tos --no-eff-email -d streaming.vladyslavdobrovolskyi.tech

networks:
    app-network:
        driver: bridge
